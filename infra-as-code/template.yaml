AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  This stack deploys an AWS Lambda function capable of parsing the compressed logs generated by Amazon MSK to Amazon S3 buckets

Parameters:
  FunctionDescription:
    Type: String
    Default: Function responsible for parsing compressed Amazon MSK logs
    Description: A description of the function.
  FunctionName:
    Type: String
    Default: msk-logs-parser
    Description: A name for the function.
  FunctionMemorySize:
    Type: Number
    Default: 128
    Description: The size of the memory in MB allocated per invocation of the function.
  FunctionTimeout:
    Type: Number
    Default: 180
    Description: The maximum time in seconds that the function can run before it is stopped.
  EnvGlueDB:
    Type: String
    Default: default
    Description: Database name to store the logs table
  EnvGlueTable:
    Type: String
    Default: msk_logs
    Description: Table name to store the MSK logs
  EnvPYTZTimezone:
    Type: String
    Default: Brazil/East
    Description: Timezone name used in Pytz library
  EnvSourceS3Bucket:
    Type: String
    Default: lyamada-redshift-logs
    Description: Source bucket where the compressed logs are stored
  EnvSourceMSKLogsPrefix:
    Type: String
    Default: msk-logs/
    Description: Path of the source bucket where the compressed logs are stored
  EnvTargetS3Bucket:
    Type: String
    Default: lyamada-redshift-logs
    Description: Target bucket where the decompressed/parsed logs will be stored
  EnvTargetMSKLogsPrefix:
    Type: String
    Default: transformed-logs/msk/
    Description: Path of the target bucket where the decompressed/parsed logs will be stored


Resources:
  MSKLogsParserRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${FunctionName}-iam-role'
      AssumeRolePolicyDocument:
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
      Policies: 
        - PolicyName: ReadMSKLogsFromS3Source
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                Resource:
                  - !Sub 'arn:aws:s3:::${EnvSourceS3Bucket}/*'
        - PolicyName: WriteMSKLogsIntoS3Target
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:ListBucketMultipartUploads'
                  - 's3:AbortMultipartUpload'
                  - 's3:ListBucket'
                  - 's3:DeleteObject'
                  - 's3:GetBucketLocation'
                  - 's3:ListMultipartUploadParts'
                Resource:
                  - !Sub 'arn:aws:s3:::${EnvSourceS3Bucket}/*'
                  - !Sub 'arn:aws:s3:::${EnvSourceS3Bucket}'
              - Effect: Allow
                Action:
                  - 'glue:GetDatabase'
                  - 'glue:DeleteSchema'
                  - 'glue:GetTableVersion'
                  - 'glue:CreateTable'
                  - 'glue:UpdateTable'
                  - 'glue:CreateSchema'
                  - 'glue:DeleteTable'
                  - 'glue:UpdateSchema'
                  - 'glue:GetTable'
                  - 'glue:GetPartitions'
                  - 'glue:BatchCreatePartition'
                Resource:
                  - !Sub 'arn:aws:glue:${AWS::Region}:${AWS::AccountId}:tableVersion/${EnvGlueDB}/temp_table_*/*'
                  - !Sub 'arn:aws:glue:${AWS::Region}:${AWS::AccountId}:table/${EnvGlueDB}/temp_table_*'
                  - !Sub 'arn:aws:glue:${AWS::Region}:${AWS::AccountId}:table/${EnvGlueDB}/${EnvGlueTable}/*'
                  - !Sub 'arn:aws:glue:${AWS::Region}:${AWS::AccountId}:table/${EnvGlueDB}/${EnvGlueTable}'
                  - !Sub 'arn:aws:glue:${AWS::Region}:${AWS::AccountId}:database/${EnvGlueDB}'
                  - !Sub 'arn:aws:glue:${AWS::Region}:${AWS::AccountId}:registry/*'
                  - !Sub 'arn:aws:glue:${AWS::Region}:${AWS::AccountId}:schema/*'              
                  - !Sub 'arn:aws:glue:${AWS::Region}:${AWS::AccountId}:catalog'
      Path: /


  MSKLogsParserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - x86_64
      CodeUri: ../application/lambda/msk-logs-parser/
      Description: !Ref FunctionDescription
      Environment:
        Variables: 
          GLUE_DB: !Ref EnvGlueDB
          GLUE_TABLE: !Ref EnvGlueTable
          PYTZ_TIMEZONE: !Ref EnvPYTZTimezone
          SOURCE_S3_BUCKET: !Ref EnvSourceS3Bucket
          SOURCE_MSK_LOGS_PREFIX: !Ref EnvSourceMSKLogsPrefix
          TARGET_S3_BUCKET: !Ref EnvTargetS3Bucket
          TARGET_MSK_LOGS_PREFIX: !Ref EnvTargetMSKLogsPrefix
      FunctionName: !Ref FunctionName
      Handler: lambda_function.lambda_handler
      Layers:
        - arn:aws:lambda:us-east-1:336392948345:layer:AWSDataWrangler-Python37:3
      MemorySize: !Ref FunctionMemorySize
      Timeout: !Ref FunctionTimeout
      Role: !GetAtt MSKLogsParserRole.Arn
      Runtime: python3.7